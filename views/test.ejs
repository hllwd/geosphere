<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>geosphere</title>

    <!-- jquery -->
    <script src="js/bower_components/jquery/dist/jquery.js"></script>
    <!-- THREE -->
    <script src="js/other_components/Three/three.min.js"></script>
    <!-- THREEx.FullScreen -->
    <script src="js/other_components/THREEx.FullScreen/THREEx.FullScreen.js"></script>
    <!-- THREEx.WindowResize -->
    <script src="js/bower_components/threex.windowresize/threex.windowresize.js"></script>
    <!-- Detector -->
    <script src="js/other_components/Detector/Detector.js"></script>
    <!-- TrackballControls -->
    <script src="js/other_components/TrackballControls/TrackballControls.js"></script>
    <!-- toxiclib -->
    <script src="js/bower_components/toxiclibsjs/build/toxiclibs.js"></script>
    <!-- delaunay -->
    <script src="js/other_components/delaunay/delaunay.js"></script>
    <!-- d3 -->
    <script src="js/bower_components/d3/d3.min.js"></script>
    <!-- lodash -->
    <script src="js/bower_components/lodash/dist/lodash.js"></script>
    <!--  main script  -->
    <script src="js/lib/geosphere.js"></script>

</head>
<body>
<!-- Shaders -->
<script type="x-shader/x-vertex" id="vertexshader">

varying vec3 vNormal;

void main() {

  // set the vNormal value with
  // the attribute value passed
  // in by Three.js
  vNormal = normal;

  gl_Position = projectionMatrix *
                modelViewMatrix *
                vec4(position, 1);
}

	</script>

<script type="x-shader/x-fragment" id="fragmentshader">

// same name and type as VS
varying vec3 vNormal;

void main() {

  // calc the dot product and clamp
  // 0 -> 1 rather than -1 -> 1
  vec3 light = vec3(0.5, 0.2, 1.0);

  // ensure it's normalized
  light = normalize(light);

  // calculate the dot product of
  // the light to the vertex normal
  float dProd = max(0.0,
                    dot(vNormal, light));

  // feed into our frag colour
  gl_FragColor = vec4(dProd, // R
                      dProd, // G
                      dProd, // B
                      1);  // A

}

	</script>
<!-- End Shaders -->

<div id="container"></div>
</body>
</html>